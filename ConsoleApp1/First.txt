 
  Что такое C# и для чего он используется?
    	a) Язык программирования для создания веб-страниц.
    	b) Язык программирования для разработки приложений на платформе .NET.
    	c) Язык разметки для оформления документов.

@
	Как объявляется переменная в C#?
    	a) variable x;
    	b) int x;
    	c) declare x;

@
	В чем разница между int и float в C#?
    	a) int используется для целых чисел, а float для чисел с плавающей запятой.
    	b) int используется для чисел с плавающей запятой, а float для целых чисел.
    	c) Нет разницы.
@

	Как создать константу в C#?
    	a) const int x = 5;
    	b) readonly int x = 5;
    	c) constant x = 5;
@

	Что такое массив в C# и как его объявить?
    	a) array x = new array();
    	b) int[] x = new int[5];
    	c) list<int> x = new list<int>();

@
	Каков синтаксис использования условного оператора if в C#?
    	a) if x > 0 then { /* code */ }
    	b) if (x > 0) { /* code */ }
    	c) if (x > 0: /* code */ )

@
	Как использовать цикл for в C#?
    	a) for (int i = 0; i < 10; i++) { /* code */ }
    	b) loop (int i = 0; i < 10; i++) { /* code */ }
    	c) foreach (int i = 0; i < 10; i++) { /* code */ }


	Что такое оператор switch и как его использовать?
    	a) switch (x) { case 1: /* code */ break; }
    	b) if (x) { /* code */ } else { /* code */ }
    	c) for (int i = 0; i < x; i++) { /* code */ }

@
	Как объявить функцию (метод) в C#?
    	a) method void MyMethod() { /* code */ }
    	b) void MyMethod() { /* code */ }
    	c) function MyMethod() { /* code */ }

@
	В чем разница между out и ref в параметрах метода?
    	a) out используется для передачи данных в метод, а ref для получения данных.
    	b) ref используется для передачи данных в метод, а out для получения данных.
    	c) Нет разницы.

@
	Как создать объект класса в C#?
    	a) Class obj = new Class();
    	b) new Class obj;
    	c) Object.create(Class);

@
	Что такое конструктор и как он используется в C#?
    	a) Метод для создания объекта класса, вызывается при его инициализации.
    	b) Метод для удаления объекта класса, вызывается при его уничтожении.
    	c) Метод для изменения состояния объекта класса.
@

	Какие основные принципы наследования в C#?
    	a) Множественное наследование и полиморфизм.
    	b) Инкапсуляция и абстракция.
    	c) Иерархия и переопределение.

@
	Что такое интерфейс в C# и как его реализовать?
    	a) Способ описания класса, не имеющего реализации. Реализуется через ключевое слово interface.
    	b) Способ описания абстрактного класса. Реализуется через ключевое слово abstract.
    	c) Способ описания статического класса. Реализуется через ключевое слово static.
@

	Как обработать исключение (используя блок try-catch)?
    	a) try { /* code */ } catch { /* code */ }
    	b) if (error) { /* code */ } else { /* code */ }
    	c) exception (/* code */) { /* code */ }

@
	Какие ключевые слова используются для управления доступом к членам класса?
    	a) public, private, protected
    	b) open, close, read
    	c) external, internal, local

@
	Каким образом реализовать множественное наследование в C#?
    	a) Используя ключевое слово multiple.
    	b) Множественное наследование невозможно в C#.
    	c) Используя ключевое слово implements.
@

	Что такое свойства (properties) в C#?
    	a) Методы для работы с файловой системой.
    	b) Специальные методы для доступа к членам класса.
    	c) Переменные, предоставляющие доступ к членам класса.
@

	Как использовать индексаторы в C#?
    	a) Специальные методы для работы с массивами.
    	b) Специальные методы для доступа к элементам коллекции по индексу.
    	c) Методы для работы с числами.

@
	Как создать статический метод в C#?
    	a) static void MyMethod() { /* code */ }
    	b) void static MyMethod() { /* code */ }
    	c) method static void MyMethod() { /* code */ }


	Что такое пространство имен (namespace) в C#?
    	a) Место для хранения переменных.
    	b) Область видимости для именованных элементов, предотвращающая конфликты имен.
    	c) Специальная область для хранения комментариев.
@

	Как передать параметры в метод по ссылке (by reference)?
    	a) Передать параметр с ключевым словом reference.
    	b) Передать параметр с ключевым словом ref.
    	c) Передать параметр с ключевым словом byref.
@

	Как создать перечисление (enum) в C#?
    	a) enum MyEnum { /* values */ }
    	b) enum = MyEnum { /* values */ }
    	c) MyEnum = enum { /* values */ }
@

	Как использовать делегаты в C#?
    	a) delegate MyDelegate() { /* code */ }
    	b) delegate void MyDelegate() { /* code */ }
    	c) void = delegate MyDelegate() { /* code */ }

@
	Что такое события (events) в C#?
    	a) Методы для обработки исключений.
    	b) Методы для работы с файлами.
    	c) Механизм для уведомления о возникновении событий и их обработки.

@
	Как работает анонимный тип в C#?
    	a) Тип данных, не имеющий имени и описываемый с помощью ключевого слова anon.
    	b) Тип данных, создаваемый на лету без явного определения класса.
    	c) Тип данных, используемый для хранения анонимных объектов.

@
	Как реализовать свой собственный исключительный тип (exception)?
    	a) Создать класс, наследующийся от System.Exception.
    	b) Использовать ключевое слово exception.
    	c) Создать объект класса System.Exception.

@
	Как осуществить ввод и вывод данных в консольном приложении C#?
    	a) console.input() и console.output()
    	b) Console.Read() и Console.Write()
    	c) input(Console) и output(Console)

@
	Как использовать LINQ для запросов к коллекциям в C#?
    	a) LINQ используется автоматически в запросах к коллекциям.
    	b) Создать объект LINQ и передать ему коллекцию.